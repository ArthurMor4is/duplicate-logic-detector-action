name: Test Action

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-action:
    runs-on: ubuntu-latest
    name: Test the action
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create test files for detection
        run: |
          echo "Creating test files..."
          mkdir -p test_files
          cat > test_files/original.py << 'EOF'
          def validate_email(email):
              import re
              pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
              return re.match(pattern, email) is not None
          EOF
          
          cat > test_files/duplicate.py << 'EOF'
          def check_email_format(email_addr):
              import re
              regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
              return re.match(regex, email_addr) is not None
          EOF

      - name: Test the action
        uses: ./
        id: test
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          similarity-threshold: 0.6
          post-comment: false
          fail-on-duplicates: false
        continue-on-error: true

      - name: Verify outputs
        run: |
          echo "Duplicates found: ${{ steps.test.outputs.duplicates-found }}"
          echo "Match count: ${{ steps.test.outputs.match-count }}"
          echo "High confidence count: ${{ steps.test.outputs.high-confidence-count }}"
          echo "Report path: ${{ steps.test.outputs.report-path }}"
          echo "âœ… Action test completed successfully"

  unit-tests:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run tests
        run: uv run pytest tests/ -v --cov=scripts --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true
